import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.chain.wallet.fashion"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 100
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
//            manifest.srcFile 'AndroidManifest.xml'
//            java.srcDirs = ['.apt_generated','src']
//            resources.srcDirs = ['.apt_generated','src']
//            aidl.srcDirs = ['.apt_generated','src']
//            renderscript.srcDirs = ['.apt_generated','src']
//            res.srcDirs = ['res']
//            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }


        // Move the tests to tests/java, tests/res, etc...
//        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //network
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'
    //pull to refresh
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.4-7'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.4-7'
    implementation 'com.android.support:design:27.1.1'
    //弹出框
    implementation 'com.terry:tcdialoglibrary:1.0'
    //fresco   https://www.fresco-cn.org/docs/using-drawees-xml.html
    implementation 'com.facebook.fresco:fresco:1.9.0'
    //compile 'com.github.bumptech.glide:glide:3.7.0'
    //eventbus
    implementation 'org.greenrobot:eventbus:3.1.1'
    //webview
    implementation 'com.just.agentweb:agentweb:4.0.2' // (必选)
    implementation 'com.just.agentweb:download:4.0.2' // (可选)
    implementation 'com.just.agentweb:filechooser:4.0.2'// (可选)
    //adapter
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.35'
    //viewpager Indicator
    implementation 'com.github.hackware1993:MagicIndicator:1.5.0'
    //轮播图
    implementation 'com.bigkoo:convenientbanner:2.0.5'

    //butterknife
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

//    api project(':umengsdk')
//    api project(':PushSDK')

    //图片选择器
//    implementation 'cn.finalteam.rxgalleryfinal:library:1.1.3'

    //弹出选择框
//    implementation 'com.longsh:OptionFrame:1.0.0'

    //状态栏
    implementation 'com.readystatesoftware.systembartint:systembartint:1.0.3'

    //流式布局
//    implementation 'com.hyman:flowlayout-lib:1.1.2'
    // aop注解
    implementation 'org.aspectj:aspectjrt:1.8.9'

    //BadgeView
//    implementation 'q.rorbin:badgeview:1.1.3'

    //permisstion
    implementation 'com.lovedise:permissiongen:0.0.6'
    //qrcode
    implementation 'cn.yipianfengye.android:zxing-library:2.2'
    //proto
    implementation 'com.googlecode.protobuf-java-format:protobuf-java-format:1.2'
    // ViewModel and LiveData
    implementation 'android.arch.lifecycle:extensions:1.1.1'
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '27.1.1'
            }
        }
    }
}

// AOP相关
final def log = project.logger
final def variants = project.android.applicationVariants
variants.all { variant ->
//    if (!variant.buildType.isDebuggable()) {
//        log.debug("Skipping non-debuggable build type '${variant.buildType.name}'.")
//        return;
//    }

    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.8",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
        log.debug "ajc args: " + Arrays.toString(args)

        MessageHandler handler = new MessageHandler(true);
        new Main().run(args, handler);
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break;
                case IMessage.WARNING:
                    log.warn message.message, message.thrown
                    break;
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break;
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break;
            }
        }
    }
}